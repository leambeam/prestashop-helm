{{/*
StatefulSet/Deployment resource for MySQL
The resource type depends on the 'common.persistence.enabled'
Creates the MySQL pod, with behavior controlled by values in 'values.yaml'.
*/}}

apiVersion: apps/v1
kind: {{ if .Values.common.persistence.enabled }}StatefulSet{{ else }}Deployment{{ end }}
metadata:
  name: {{ include "mysql.fullname" . }}
  labels:
    {{- include "mysql.labels" . | nindent 4 }}
spec:
  {{- if .Values.common.persistence.enabled  }}
  serviceName: mysql
  {{- end }}
  {{- if not .Values.mysql.autoscaling.enabled }}
  replicas: {{ .Values.mysql.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "mysql.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.mysql.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "mysql.labels" . | nindent 8 }}
        {{- with .Values.mysql.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.mysql.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "prestashop.serviceAccountName" . }} # TO DO: modify service account
      securityContext:
        {{- toYaml .Values.mysql.podSecurityContext | nindent 8 }}
      containers:
        - name: mysql
          securityContext:
            {{- toYaml .Values.mysql.securityContext | nindent 12 }}
          image: "{{ .Values.mysql.image.repository }}:{{ .Values.mysql.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.mysql.image.pullPolicy }}
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: {{ .Values.prestashop.env.dbPasswd | quote }}
            - name: MYSQL_DATABASE
              value: {{ .Values.prestashop.env.dbName | quote }}
          ports:
            - name: mysql
              containerPort: {{ .Values.mysql.service.ports.mysql }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.mysql.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.mysql.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.mysql.resources | nindent 12 }}
          {{- if .Values.common.persistence.enabled }}
          {{- with .Values.mysql.persistence.volumeMounts }}
          volumeMounts: 
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- end }}
      {{- with .Values.mysql.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.mysql.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.mysql.tolerations }} 
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- if .Values.common.persistence.enabled }}       
  volumeClaimTemplates:
    - metadata:
        name: {{ .Values.mysql.persistence.volumeClaimName }}
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.mysql.persistence.size }} 
        storageClassName: hostpath-retain
        {{- if .Values.mysql.persistence.existingPVName }}
        volumeName: {{ .Values.mysql.persistence.existingPVName }}
        {{- end }}
  {{- end }}